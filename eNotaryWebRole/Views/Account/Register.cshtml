@model eNotaryWebRole.Models.PersonDetail
@{
    ViewBag.Title = "Register";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Create a new account.</h2>
</hgroup>
<h4 id="ErrorMessage" ></h4>

@using (@Ajax.BeginForm("Register", "Account", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "Test", InsertionMode = InsertionMode.Replace, LoadingElementId = "loadingDiv", OnBegin = "onBegin", OnSuccess = "onSuccess" }, new { id = "registrationForm" }))
{ 
   @Html.AntiForgeryToken()
   @Html.ValidationSummary()

   
    <div class="dropdown"> 
      <ul class="nav nav-pills" role="menu" aria-labelledby="dLabel" id="registerMenu">
          <li class="active" id="liPersonDetails"><a href="#" >Date personale</a></li>   
          <li id ="liAddress"><a href="#">Adresa</a></li> 
          <li id ="liContactDetails"><a href="#">Date de contact</a></li> 
      </ul>
    </div>
    <div id="contentRegister" style="width:100%; margin-left:2%;">
    
    <div id="divPersonal">
       <div style ="float:left; width:50%;">
            <p id="pFirstName"> Prenume 1 </p>
            @Html.TextBoxFor(m => m.FirstName)
      
      
            <p id="pMiddleName"> Prenume 2</p>
            @Html.TextBoxFor(m => m.MiddleName)
       
       
            <p id="pLastName"> Nume</p>
            @Html.TextBoxFor(m => m.LastName)
        
     
            <p id="pBirthday"> Data nasterii</p>
            @Html.TextBoxFor(m => m.Birthday)
       

         
            <p id="pGender"> Sex</p>
            @{
                List<string> list = new List<string>();
                list.Add("Feminin");
                list.Add("Masculin");
                SelectList listGender = new SelectList(list);
    
            }
           @Html.DropDownList("genderList", listGender, new { id="genderList"})
        
         
           
        
       </div>
        <div style ="float:left; width :50%;">
           <p id="pNationality"> Nationalitate</p>
            @Html.TextBoxFor(m => m.Nationality)
           <p id="pJobType"> Tipul job-ului </p>
             @Html.DropDownList("JobType")
            
            <p id="pJobPlace">Locul de munca</p>
            @Html.TextBoxFor(m=>m.JobPlace)
            <p id="pEducationLevel">Nivelul de educatie</p>
           @Html.DropDownList("EducationLevel")
             

        </div> 

    </div>

    <div id="divAddress" class ="hideDiv">
        @{
    long? idAddress = 0;
            if (Model != null)
            {
                idAddress = Model.AddressID;
            }
        }
       @Html.Action("Address", "Account", new {id  = idAddress })
    </div>
    
    <div id="divContactDetails" class="hideDiv">
        <p id="pMobilePhoneNumber"> Numar de telefon mobil</p>
        @Html.TextBoxFor(m=> m.MobilePhoneNumber)
        <p id="pHomePhoneNumber"> Numar de telefon fix (acasa)</p>
        @Html.TextBoxFor(m=> m.HomePhoneNumber)
        <p id="pEmail"> Adresa email</p>
        @Html.TextBoxFor(m=>m.Email)
        <p id="pFacebookID"> Facebook ID</p>
        @Html.TextBoxFor(m=>m.FacebookID)
        <p id="pCommunicationMode"> Modalitate de comunicare</p>
        <input type="checkbox" id="chkSMS" name="chkSMS"/> <b id="bSMS"> SMS </b>
        <input type="checkbox" id="chkMobilePhone" name =" chkMobilePhone"/> <b id="bMobilePhone"> Telefon Mobil </b>
        <input type="checkbox" id="chkEmail" name="chkEmail" /> <b id="bEmail"> Email </b>
        <input type="checkbox" id="chkFacebookID" name="chkFacebookID"/> <b id="bFacebookID"> Facebook ID </b>
       
    </div>
     </div>   
    <br />
    <br />
    <div  style ="float:left; width:100%; margin-left:2%;" id="btnRegisterNow"> <input type="submit" class ="btn" value="Inregistrati-va acum" style="float:left; " data-toggle="modal" data-target="#divUserPopUp"/></div> 
    <div id="divUserPopUp" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
         <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="myModalLabel">Formular pentru Username si parola</h3>
        </div>
        <div class="modal-body">
            <p id="pUsername">Username</p>
            <input type ="text" id="iUsername" />
            <p id="pPassword">Parola</p>
            <input type="password" id="iPassword" />
            <p id="pConfirmPassword">Confirmare parola</p>
            <input type="password" id="iConfirmPassword" />
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Inchide</button>
            <button class="btn btn-primary">Salveaza</button>
         </div>
    </div>
}
    


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $("#Birthday").datepicker('show');
       

    $(document).ready(function () {

       

        // change tab
        // find live which tab was clicked to make it active
        $('#registerMenu li a').live('click', function () {

           

            // remove class active from each tab 
            $('#registerMenu').find('li').removeClass('active');

            $("#"+$(this).parent()[0].id).addClass('active');
            if ($(this).parent()[0].id == 'liAddress') {
                $("#divAddress").removeClass('hideDiv');
                $("#divPersonal").addClass('hideDiv');
                $("#divContactDetails").addClass('hideDiv');
            }
            else if ($(this).parent()[0].id == 'liPersonDetails') {
                        $("#divAddress").addClass('hideDiv');
                        $("#divPersonal").removeClass('hideDiv');
                        $("#divContactDetails").addClass('hideDiv');
            }
            else  if ($(this).parent()[0].id == 'liContactDetails') {
                        $("#divAddress").addClass('hideDiv');
                        $("#divPersonal").addClass('hideDiv');
                        $("#divContactDetails").removeClass('hideDiv');
                    }

        });

        // validate the registration form

        $("#registrationForm").validate({
            onsubmit: false,
            ignore: '.ignore',
            debug: true,
            onkeyup: false,
            onclick: false,
            rules: {
                FirstName: {
                    required: true                 
                },
                LastName:{
                    required: true
                },
                Birthday:{
                    date: true,
                    required: true
                },
                Address1: {
                    required: true
                },
                Street_1:{
                    required: true
                },
                ZIP:{
                    required: true,
                    numeric: "#ZIP"
                },
                City:{
                    required: true
                },
                Country :{
                    required: true
                },
                MobilePhoneNumber:{
                    required: true
                },
                Email :{
                    required: true
                }

            },
            messages: {
                FirstName: {
                    required: "*"
                },
                LastName: {
                    required: "*"
                },
                Birthday: {
                    required: "*"
                },
                Address1: {
                    required: "*"
                },
                Street_1: {
                    required: "*"
                },
                ZIP : {
                    required: "*",
                    numeric: "Codul postal trebuie sa fie alcatuit din 6 cifre"
                },
                City: {
                    required: "*"
                },
                Country: {
                    required: "*"
                },
                MobilePhoneNumber: {
                    required: "*"
                },
                Email :{
                    required:  "*"
                }


                },
             showErrors: function (e, el) {

                 this.defaultShowErrors();
                 

             }
         });

        
        jQuery.validator.addMethod("numeric",
            function (value, element, params) {
                if (params == "")
                    return true;
                var code= $(params).val();
               

                return !isNaN(parseFloat(code)) && isFinite(code);;
            });

        $('#btnRegisterNow').click(function (e) {

            e.preventDefault();


            if ($("#registrationForm").valid()) {
                
                $('#divUserPopUp').modal('show');

            } else {

                $("#ErrorMessage").text("Campurile marcate cu (*) sunt obligatorii!");
                $("#ErrorMessage").addClass('alert alert-error');
            }
            
        });
       
   
        

    });
   
        

</script>

@if (!Model.Empty)
{
   <script type="text/javascript">
       
       // communication mode STEF
       $(document).ready(function(){
           var commMode = '@Html.Raw(Model.CommunicationMode)';

           if(commMode !=''){
               if(commMode.Contains('S')){
                   $("#chkSMS").attr('checked',true);
               }
               else if(commMode.Contains('T')){
                   $("#chkEmail").attr('checked',true);
               }
               else if(commMode.Contains('F'){
                   $("#chkFacebookID").attr('checked',true);
               }
           }
       });
      
   </script>
}